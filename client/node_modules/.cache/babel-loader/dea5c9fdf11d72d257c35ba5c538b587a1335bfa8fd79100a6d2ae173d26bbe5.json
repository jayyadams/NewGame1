{"ast":null,"code":"var _jsxFileName = \"/home/jayyadams/Development/code/coding/NewGame1/client/src/components/Dungeon.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dungeon = ({\n  characterId,\n  enterCombat,\n  exitCombat\n}) => {\n  _s();\n  const [highestAccessibleFloor, setHighestAccessibleFloor] = useState(1);\n  const [showFloorMenu, setShowFloorMenu] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPlayerData = async () => {\n      try {\n        const response = await axios.get('/player_data');\n        const highestLevel = response.data.highest_dungeon_level || 1;\n        setHighestAccessibleFloor(Math.min(highestLevel, 100));\n      } catch (error) {\n        console.error('Error fetching player data:', error);\n      }\n    };\n    fetchPlayerData();\n  }, []);\n  const handleFloorSelect = async floorNumber => {\n    try {\n      console.log('floorselect');\n      await axios.post('/dungeon/choose_floor', {\n        floor: floorNumber\n      });\n      navigate('/combat', {\n        state: {\n          floor: floorNumber\n        }\n      });\n    } catch (error) {\n      console.error('Error initiating combat:', error);\n    }\n  };\n  const toggleFloorMenu = () => {\n    console.log('togglefloor');\n    setShowFloorMenu(!showFloorMenu);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dungeon-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Tower\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFloorMenu,\n      children: showFloorMenu ? 'Hide Floors' : 'Select Floor'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), showFloorMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose a Floor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dungeon-floor-buttons\",\n        children: [...Array(highestAccessibleFloor)].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFloorSelect(index + 1),\n          children: [\"Floor \", index + 1]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Dungeon, \"v7/w8b01J59XJbd8LnDfzKSl38o=\", false, function () {\n  return [useNavigate];\n});\n_c = Dungeon;\nexport default Dungeon;\nvar _c;\n$RefreshReg$(_c, \"Dungeon\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Dungeon","characterId","enterCombat","exitCombat","_s","highestAccessibleFloor","setHighestAccessibleFloor","showFloorMenu","setShowFloorMenu","navigate","fetchPlayerData","response","get","highestLevel","data","highest_dungeon_level","Math","min","error","console","handleFloorSelect","floorNumber","log","post","floor","state","toggleFloorMenu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","map","_","index","_c","$RefreshReg$"],"sources":["/home/jayyadams/Development/code/coding/NewGame1/client/src/components/Dungeon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dungeon = ({ characterId, enterCombat, exitCombat }) => {\n    const [highestAccessibleFloor, setHighestAccessibleFloor] = useState(1);\n    const [showFloorMenu, setShowFloorMenu] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchPlayerData = async () => {\n            try {\n                const response = await axios.get('/player_data');\n                const highestLevel = response.data.highest_dungeon_level || 1;\n                setHighestAccessibleFloor(Math.min(highestLevel, 100));\n            } catch (error) {\n                console.error('Error fetching player data:', error);\n            }\n        };\n\n        fetchPlayerData();\n    }, []);\n\n    const handleFloorSelect = async (floorNumber) => {\n        try {\n            console.log('floorselect')\n            await axios.post('/dungeon/choose_floor', { floor: floorNumber });\n            navigate('/combat', { state: { floor: floorNumber } });\n        } catch (error) {\n            console.error('Error initiating combat:', error);\n        }\n    };\n\n    const toggleFloorMenu = () => {\n        console.log('togglefloor')\n        setShowFloorMenu(!showFloorMenu);\n    };\n\n    return (\n        <div className=\"dungeon-container\">\n            <h1>The Tower</h1>\n            <button onClick={toggleFloorMenu}>\n                {showFloorMenu ? 'Hide Floors' : 'Select Floor'}\n            </button>\n\n            {showFloorMenu && (\n                <div>\n                    <p>Choose a Floor:</p>\n                    <div className=\"dungeon-floor-buttons\">\n                        {[...Array(highestAccessibleFloor)].map((_, index) => (\n                            <button \n                                key={index + 1} \n                                onClick={() => handleFloorSelect(index + 1)}\n                            >\n                                Floor {index + 1}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Dungeon;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}